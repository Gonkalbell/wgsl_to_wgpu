use std::fmt::Write;

use wgsl_to_wgpu::{create_shader_module, MatrixVectorTypes, WriteOptions};

fn main() {
    println!("cargo:rerun-if-changed=src/shader.wgsl");
    let wgsl_source = std::fs::read_to_string(format!("src/shader.wgsl")).unwrap();

    // Generate the Rust bindings and write to a file.
    let mut text = String::new();
    writeln!(&mut text, "// File automatically generated by build.rs.").unwrap();
    writeln!(&mut text, "// Changes made to this file will not be saved.").unwrap();
    text += &create_shader_module(
        &wgsl_source,
        &format!("shader.wgsl"),
        WriteOptions {
            derive_bytemuck_vertex: true,
            derive_encase_host_shareable: true,
            matrix_vector_types: MatrixVectorTypes::Glam,
            rustfmt: true,
            ..Default::default()
        },
    )
    .unwrap();

    std::fs::write(format!("src/shader.rs"), text.as_bytes()).unwrap();
}
